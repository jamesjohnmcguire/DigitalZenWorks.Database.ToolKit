CREATE TABLE `Addresses` (
	`id` INTEGER NOT NULL IDENTITY,
	`StateId` INTEGER DEFAULT 0,
	`Label` VARCHAR(50),
	CONSTRAINT PrimaryKey PRIMARY KEY (`id`)
);

CREATE TABLE `Categories` (
	`id` INTEGER NOT NULL IDENTITY,
	`name` VARCHAR(50),
	`parentId` INTEGER DEFAULT NULL,
	CONSTRAINT PrimaryKey PRIMARY KEY (`id`),
	CONSTRAINT `CategoriesCategories` FOREIGN KEY (`parentId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `Contacts` (
	`id` INTEGER NOT NULL IDENTITY,
	`idAddresses` INTEGER DEFAULT NULL,
	`Label` VARCHAR(50),
	CONSTRAINT PrimaryKey PRIMARY KEY (`id`),
	CONSTRAINT `FK_Contacts` FOREIGN KEY (`idAddresses`) REFERENCES `Addresses` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `Makers` (
	`id` INTEGER NOT NULL IDENTITY,
	`name` VARCHAR(50),
	CONSTRAINT PrimaryKey PRIMARY KEY (`id`)
);

CREATE TABLE `Sections` (
	`id` INTEGER NOT NULL IDENTITY,
	`categoryId` INTEGER DEFAULT NULL,
	`makerId` INTEGER DEFAULT NULL,
	`Label` VARCHAR(50),
	CONSTRAINT PrimaryKey PRIMARY KEY (`id`),
	CONSTRAINT `SectionsCategories` FOREIGN KEY (`categoryId`) REFERENCES `Categories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT `SectionsMakers` FOREIGN KEY (`makerId`) REFERENCES `Makers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `Series` (
	`id` INTEGER NOT NULL IDENTITY,
	`makerId` INTEGER DEFAULT NULL,
	`Label` VARCHAR(50),
	CONSTRAINT PrimaryKey PRIMARY KEY (`id`),
	CONSTRAINT `SeriesMakers` FOREIGN KEY (`makerId`) REFERENCES `Makers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `Products` (
	`id` INTEGER NOT NULL IDENTITY,
	`makerId` INTEGER DEFAULT NULL,
	`sectionId` INTEGER DEFAULT NULL,
	`seriesId` INTEGER DEFAULT NULL,
	`Label` VARCHAR(50),
	CONSTRAINT PrimaryKey PRIMARY KEY (`id`),
	CONSTRAINT `ProductsMakers` FOREIGN KEY (`makerId`) REFERENCES `Makers` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT `ProductsSections` FOREIGN KEY (`sectionId`) REFERENCES `Sections` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT `ProductsSeries` FOREIGN KEY (`seriesId`) REFERENCES `Series` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

