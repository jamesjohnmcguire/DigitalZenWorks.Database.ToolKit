/////////////////////////////////////////////////////////////////////////////
// Copyright © 2006-2016 by James John McGuire
// All rights reserved.
/////////////////////////////////////////////////////////////////////////////
namespace DigitalZenWorks.Common.DatabaseLibrary
{
	/////////////////////////////////////////////////////////////////////////
	/// <summary>
	/// Represents a database column.
	/// </summary>
	/////////////////////////////////////////////////////////////////////////
	public class Column
	{
		private string defaultValue = string.Empty;
		private int length = 255;
		private string name = string.Empty;
		private bool nullable = false;
		private int position = 1;
		private ColumnType type = ColumnType.Number;
		private bool unique = false;

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// The type of the column
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public ColumnType ColumnType
		{
			get { return type; }
			set { type = value; }
		}

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Represents the default value of the column
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public string DefaultValue
		{
			get { return defaultValue; }
			set { defaultValue = value; }
		}

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Indicates whether the column is indexed or not.
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public bool Indexed { get; set; }

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// The length of the column
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public int Length
		{
			get { return length; }
			set { length = value; }
		}

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Indicates the column's maximum value allowed.
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public int MaxValue { get; set; }

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Indicates the column's minimum value allowed.
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public int MinValue { get; set; }

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// The name of the column
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public string Name
		{
			get { return name; }
			set { name = value; }
		}

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Represents whether the column can have a null value
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public bool Nullable
		{
			get { return nullable; }
			set { nullable = value; }
		}

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Represents the position of the column
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public int Position
		{
			get { return position; }
			set { position = value; }
		}

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Indicates whether the column is the primary column.
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public bool Primary { get; set; }

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Represents whether the column requires unique values
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public bool Unique
		{
			get { return unique; }
			set { unique = value; }
		}

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Default Constructor
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public Column()
		{
		}

		/////////////////////////////////////////////////////////////////////
		/// <summary>
		/// Constructor
		/// </summary>
		/////////////////////////////////////////////////////////////////////
		public Column(string name, ColumnType type, int length, bool unique,
			bool nullable, string defaultValue, int position)
		{
			Name = name;
			ColumnType = type;
			Length = length;
			Unique = unique;
			Nullable = nullable;
			DefaultValue = defaultValue;
			Position = position;
		}
	}
}